---
title: "Challenge_4: Intro to Visulization: Univariate and Multivariate Graphs"
author: "Muneer Ahmed"
description: ""
date: "10/18/2023"
format:
  html:
    df-print: paged
    css: "styles.css"
    embed-resources: true
    self-contained-math: true
categories:
  - weekly_challenges
  - challenge_4
---

**Make sure you change the author's name in the above YAML header.**

## Setup

If you have not installed the following packages, please install them before loading them.

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(haven) #for loading other datafiles (SAS, STATA, SPSS, etc.)
library(stringr) # if you have not installed this package, please install it.
library(ggplot2) # if you have not installed this package, please install it.
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

In this challenge, we will practice with the data we worked on in the previous challenges and the data you choose to do some simple data visualizations using the `ggplot2` package.

There will be coding components and writing components. Please read the instructions for each part and complete your challenges.

## Datasets

-   Part 1 the ESS_Polity Data (created in Challenge#3) ⭐⭐
-   Part 2: the Australia Data⭐⭐
-   Part 3: see [Part 3. Practice plotting with a dataset of your choice (25% of the total grade)]. For online platforms of free data, see [Appendix: sources for data to be used in Part 3].

Find the `_data` folder, then read the datasets using the correct R command.

## Part 1. Univariate and Multivariate Graphs (45% of the total grade)

We have been working with these two data in the previous three challenges. Suppose we have a research project that studies European citizens' social behaviors and public opinions, and we are interested in how the countries that respondents live in influence their behavior and opinion. In this challenge, let's work with the combined dataset *ESS_Polity* and create some visualizations.

1.  **Read the combined data you created last time. (2.5%)**

```{r}
#type of your code/command here.
ESS_Polity <- read.csv("D:/Umass MS CS/dacss 601/challenge 3/ESS_Polity.csv")
head(ESS_Polity)
```

2.  **Suppose we are interested in the central tendencies and distributions of the following variables. At the individual level:** *age, male, edu, income_10,* and *vote*. **At the country level**: *democ*.

    \(1\) Recode the "vote" column: if the value is 1, recode it as 1; if the value is 2, recode it as 0; if the value is 3, recode it as NA. **Make sure to include a sanity check for the recoded data. (2.5%)**

    ```{r}
    #type of your code/command here.
    # sanity check before
    ESS_Polity %>% count(vote)
    ESS_Polity <- ESS_Polity %>% mutate(vote = recode(vote, "1" = "1", "2" = "0", "3" = NA_character_))
    # sanity check after
    ESS_Polity %>% count(vote)
    head(ESS_Polity)
    ```

    \(2\) For each of the five variables (*age, edu, income_10,* *vote,* and *democ)*, please choose an appropriate type of univariate graph to plot the central tendencies and distribution of the variables. Explain why you choose this type of graph to present a particular variable (for example: "For example, I use a histogram to plot *age* because it is a continuous numeric variable"). **(25%)**

    **(Note: You should use at least two types of univariate graphs covered in the lecture.)**

Ans) I choose to use a density plot for age as there is is a continuous numeric variable with a long range.
     I choose to use a histogram for both edu and income_10 as they are represent levels and there are multi-valued which makes it ideal for a histogram.
     I choose to use a violin chart for vote and democ as they give an accurate measure of density for the values for these columns.

    ```{r}
    #type of your code/command here.
    summary(ESS_Polity)
    ESS_Polity %>%
      filter(!is.na(age)) %>%
      ggplot(aes(x=age)) + geom_density(fill="#69b3a2", alpha = 0.8) + labs(title="Age")
    
    ESS_Polity %>%
      filter(!is.na(edu)) %>%
      ggplot(aes(x=edu)) + geom_histogram(fill="69b3a2") + labs(title="Edu")
    
    ESS_Polity %>%
      filter(!is.na(income_10)) %>%
      ggplot(aes(x=income_10)) + geom_histogram(fill="69b3a2") + labs(title="Income_10")
    
    ESS_Polity %>%
      filter(!is.na(vote)) %>%
      ggplot(aes(x= vote, y= "", fill= "69b3a2")) + geom_violin(trim=FALSE) + labs(title="Vote")
    
    ESS_Polity %>%
      filter(!is.na(democ)) %>%
      ggplot(aes(x= democ, y= "", fill= "69b3a2")) + geom_violin(trim=FALSE) + labs(title="Democ")
    
```

3.  **Suppose we want to test two hypotheses on the relationships of two pairs of variables**. **Please use the appropriate type of graphs we learned to visualize these two pairs of variables. Briefly describe the graph you plot, and answer: Does the graph we create from the data support the hypothesis?**

    \(1\) Hypothesis#1: The more years of education (edu) a person completed, the higher income (income_10) they earn. **(7.5%)**

    ```{r}
    ESS_Polity_h1 <- ESS_Polity %>%
      filter(!is.na(edu) & !is.na(income_10)) %>%
      select(edu, income_10) %>%
      group_by(edu, income_10) %>%
      summarise(value = n())
    
    ESS_Polity_h1
    essp_barplot <- ggplot(ESS_Polity_h1, aes(fill=income_10, y=value, x=edu)) + geom_bar(position = "fill", stat = "identity") 
    essp_barplot
    ```


The graph I choose is a percentage stacked bar between edu and income_10. It shows the number of people having income_10 at edu levles. 

Yes, the graph supports the hypothesis. We can see above that the number of years in education increases the income also increases. We can see above for edu 4 there is higer income on top.

    \(2\) Hypothesis#2: There is a gender disparity (male) in voting behavior (vote). (Either men are more likely to vote, or women are more likely to vote). **(7.5%)**

    ```{r}
    #type of your code/command here.
    ESS_Polity_h2 <- ESS_Polity %>%
      filter(!is.na(male)) %>%
      select(vote, male) %>%
      group_by(vote, male) %>%
      summarise(value = n())
    
    ESS_Polity_h2
    essp_barplot_2 <- ggplot(ESS_Polity_h2, aes(fill=vote, y=value, x=male)) + geom_bar(position = "fill", stat = "identity")
    essp_barplot_2
    ```

The graph is a percentage stacked bar graph which shows us the percent of men, women who have vote, didnt vote and NA's. From the graph we can see there is not much difference between the percent of men and women who have voted. 


No, the graph doesnt support the hypothesis. As we can see above, thus there is almost no gender disparity between voting. The number of males who both voted and did not vote are almost equivalent to the number of female who did the same.


## Part 2. Comparing between Partial and Whole, and among Groups (30% of the total grade)

In this part, we will use the clean version of the Australian public opinion poll on Same-Sex Marriage to generate graphs and plots. **You may need to do the data transformation or mutation needed to help graphing.**

1.  Read in data. **(2.5%)**

    ```{r}
    #type of your code/command here.
    aus_data <- read.csv("D:/Umass MS CS/dacss 601/challenge 4/australian_data.csv")
    head(aus_data)
    ```

2.  Use a barplot to graph the Australian data based on their responses: yes, no, illegible, and no response. The y-axis should be the count of responses, and each response should be represented by one individual bar (so there should be four bars). **(7.5%)**

    (you can use either geom_bar() or geom_col())

    ```{r}
    #type of your code/command here.
    aus_data_bar <- aus_data %>%
      select(Yes, No, Illegible, No.Response) %>%
      colSums()
    aus_data_bar <- data.frame(Type = names(aus_data_bar), Count = as.vector(aus_data_bar))
    
    aus_barplot <- ggplot(aus_data_bar, aes(fill=Type, x=Type, y=Count)) + geom_bar(stat = "identity") + scale_fill_brewer(palette = "Set2") 
    aus_barplot
    ```

3.  The previous graph only shows the difference in amount. Let's create a stacked-to-100% barplot to show the proportion of each of the four responses (by % of the total response). **(7.5%)**

    (you can use either geom_bar() or geom_col())

    ```{r}
    #type of your code/command here.
    aus_barplot_stacked <- ggplot(aus_data_bar, aes(fill=Type, x="", y=Count)) + geom_bar(position = "stack", stat = "identity") + scale_fill_brewer(palette = "Set2") 
    aus_barplot_stacked
    ```

4.  Let's see if there's a relationship between Division and Response - that is, are certain divisions more likely to respond one way compared to other divisions? Again, we will use barplot(s) to present the visualization. **(12.5%)**

    (you can use either geom_bar() or geom_col())
    
    Yes, certain divisions more likely to respond one way compared to other divisions a seen in the plot bellow. Ex: Northern Territory division has higher NA's compared to "No" where as its the opposite in the other divisions. 

    ```{r}
    #type of your code/command here.
    aus_data_bar_2 <- aus_data %>% 
      select(Division, Yes, No, Illegible, No.Response) %>%
      group_by(Division) %>%
      summarize(Yes = sum(Yes), No = sum(No), Illegible = sum(Illegible), No.Response = sum(No.Response)) %>%
      pivot_longer(
        cols = -Division,
        names_to = "Type",
        values_to = "Count"
      )
    head(aus_data_bar_2)
    
    aus_barplot_2 <- ggplot(aus_data_bar_2, aes(fill=Type, x=Division, y=Count)) + geom_bar(position = "dodge", stat = "identity") + scale_fill_brewer(palette = "Set2") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
    aus_barplot_2
    ```

## Part 3. Practice plotting with a dataset of your choice (25% of the total grade)

In this part, you will choose data of your interests for graphing and plotting. This data can be tidy/ready-to-be-used or raw data that needs cleaning. If the data is very large (for example, more than 20 columns), you should definitely subset the data by selecting less than 10 variables of your interests to avoid taking too much room in your R memory.

1.  Include a link to the data page (this page should include the introduction or description and the link to download this dataset). **(2%)**

Ans) https://www.kaggle.com/datasets/dhavalrupapara/nba-2023-player-shot-dataset/

2.  Read the data you choose and briefly answer the following questions. (Optional: you may need to subset, clean, and transform the data if necessary). **(8%)**

    ```{r}
    #type of your code/command here.
    lebron_23_data <- read.csv("D:/Umass MS CS/dacss 601/challenge 4/nba shot/1_lebron_james_shot_chart_1_2023.csv")[,-c(3,4,5,13,14,15)]
    head(lebron_23_data)
    dim(lebron_23_data)
    ```

    \(1\) what is the structure (dimension) of the data;
          
          Ans) The dimension of the data is 1533 x 9. There are 1533 rows and 9 columns.

    \(2\) what is the unit of observation?
    
          Ans) Unit of obervation for this data is data related to the shot's taken by lebron james in the nba 2023 season.

    \(3\) what does each column mean in this data?
          Ans) Columns: 
          Top: The vertical position on the court where the shot was taken.
          Left: The horizontal position on the court where the shot was taken.
          Result: Indicates whether the shot was successful, with "TRUE" for a made shot and "FALSE" for a missed shot.
          Shot Type: Describes the type of shot attempted, such as a "2" for a two-point shot or "3" for a three-point shot.
          Distance: The distance in feet from the hoop to where the shot was taken.
          Lead: Indicates whether the team was leading when the shot was attempted, with "TRUE" for a lead and "FALSE" for no lead.
          LeBron Team Score: The team's score (in points) when the shot was taken.
          Opponent Team Score: The opposing team's score (in points) when the shot was taken.
          Opponent: The abbreviation for the opposing team (e.g., GSW for Golden State Warriors).

3.  Choose two columns/variables of your interests. Plot one univariate graph for each of the variables. **(5%)**

    ```{r}
    #type of your code/command here.
    # distance
    leb_dis <- ggplot(lebron_23_data, aes(x=distance_ft)) + geom_density(fill="#69b3a2", alpha = 0.8) + labs(title="Distance")
    leb_dis
    
    # shot type
    leb_shot <- ggplot(lebron_23_data, aes(x= shot_type, y= "", fill= "69b3a2")) + geom_violin(trim=FALSE) + labs(title="Shot Type")
    leb_shot
    ```

```{=html}
<!-- -->
```
4.  Choose a pair of variables you suspect or hypothesize may be correlated and a graph (scatter plot or barplot) using them. Based on the visual evidence, do you see any potential correlation between the two variables **(10%)**

    ```{r}
    #type of your code/command here.
    leb_data <- lebron_23_data %>%
      select(shot_type, result) %>%
      group_by(shot_type, result) %>%
      summarise(value = n())
    leb_data
    
    leb_scp <- ggplot(leb_data, aes(fill= result, y= value, x= shot_type)) + geom_bar(position="fill", stat="identity")
    leb_scp
    ```


As we can see from the above plot we can see a correlation between the shot type and the result. We can say that Lebanon has a higher a chance of making the shot if it was a two pointer rather than 3 pointer in the 2023 season.


## Appendix: sources for data to be used in Part 3

**Here are some online sources and popular Online Dataset Hub:**

1.  Many US governments (usually at the federal and state levels),  bureaus, and departments have open data archives on their websites, allowing the public to access, download, and use them. Just use Google to search for them.

```{=html}
<!-- -->
```
2.  [**The Harvard Dataverse Repository**](https://dataverse.harvard.edu/) is a free data repository open to all researchers from any discipline, inside and outside the Harvard community, where you can share, archive, cite, access, and explore research data. Each individual Dataverse collection is a customizable collection of datasets (or a virtual repository) for organizing, managing, and showcasing datasets.

```{=html}
<!-- -->
```
3.  [**Inter-university Consortium for Political and Social Research (ICPSR)**](https://www.icpsr.umich.edu/web/pages/ICPSR/index.html) of the University of Michigan-Ann Arbor provides leadership and training in data access, curation, and methods of analysis for the social science research community. 

```{=html}
<!-- -->
```
4.  **UN: <https://data.un.org/>**

```{=html}
<!-- -->
```
5.  [**OECD Data**](https://data.oecd.org/):  economic and development data of the most developed countries in the world.

```{=html}
<!-- -->
```
6.  The upper five sources are mainly for social science data; **there is another very big community and open data archives for machine-learning and data science: [Kaggle](https://www.kaggle.com/datasets).**
